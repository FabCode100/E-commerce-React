// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Produto {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  nome        String
  descricao   String?
  preco       Float
  quantidade  Int         @default(0)
  categoria   Categoria?  @relation(fields: [categoriaId], references: [id])
  categoriaId String?     @db.ObjectId
  imagemUrl   String?
  criadoEm    DateTime    @default(now())
  itensPedido ItemPedido[]
}

model Categoria {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  nome     String
  produtos Produto[]
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  nome     String
  email    String   @unique
  senha    String
  criadoEm DateTime @default(now())
  pedidos  Pedido[]
}

model Pedido {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  usuario     User         @relation(fields: [usuarioId], references: [id])
  usuarioId   String       @db.ObjectId
  criadoEm    DateTime     @default(now())
  status      String       @default("Pendente")
  itens       ItemPedido[]
  total       Float
}

model ItemPedido {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  pedido      Pedido    @relation(fields: [pedidoId], references: [id])
  pedidoId    String    @db.ObjectId
  produto     Produto   @relation(fields: [produtoId], references: [id])
  produtoId   String    @db.ObjectId
  quantidade  Int
  precoUnit   Float
}
